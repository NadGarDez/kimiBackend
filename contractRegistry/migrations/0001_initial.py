# Generated by Django 4.2.25 on 2025-10-09 21:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('system_address_manager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción opcional del contrato base.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContractVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=50)),
                ('bytecode', models.TextField()),
                ('abi', models.JSONField()),
                ('constructor_args_info', models.JSONField(default=list, help_text='Lista de nombres y tipos de argumentos del constructor para validación.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('base_contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='contractRegistry.basecontract')),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('rpc_url', models.URLField()),
                ('chain_id', models.PositiveIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeployedContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('PENDING_PREP', 'Pendiente de Preparación'), ('PENDING_SIGN', 'Esperando Firma del Usuario'), ('SENT', 'Transacción Enviada a la Red'), ('CONFIRMED', 'Confirmado y Dirección Final'), ('FAILED', 'Fallo en Despliegue')], default='PENDING_SIGN', max_length=15)),
                ('transaction_hash', models.CharField(blank=True, max_length=66, null=True, unique=True)),
                ('raw_tx_data', models.JSONField(blank=True, help_text='Datos de la transacción sin firmar, generados por web3.py.', null=True)),
                ('address', models.CharField(blank=True, max_length=42, null=True)),
                ('gas_used', models.BigIntegerField(blank=True, null=True)),
                ('base_contract', models.ForeignKey(db_index=False, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='deployed_instances', to='contractRegistry.basecontract')),
                ('contract_version', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deployments', to='contractRegistry.contractversion')),
                ('deployerAddress', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='system_address_manager.authorizedaddress')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='deployed_contracts', to='contractRegistry.network')),
            ],
        ),
        migrations.AddConstraint(
            model_name='deployedcontract',
            constraint=models.UniqueConstraint(fields=('address', 'network'), name='unique_address_per_network'),
        ),
        migrations.AddConstraint(
            model_name='deployedcontract',
            constraint=models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('network', 'base_contract'), name='unique_deployment_per_base_contract_per_network'),
        ),
        migrations.AddConstraint(
            model_name='contractversion',
            constraint=models.UniqueConstraint(fields=('base_contract', 'version'), name='unique_version_per_base_contract'),
        ),
    ]
